{
    "swagger": "2.0",
    "info": {
        "description": "API for managing aliases in a Docker Mailserver container",
        "title": "Docker Mailserver Aliases API",
        "contact": {
            "name": "Christian Scheid",
            "url": "https://github.com/scheidti/docker-mailserver-aliases",
            "email": "christian@scheid.tech"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/v1/aliases": {
            "get": {
                "description": "Gets a list of all available email aliases from the Docker Mailserver container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aliases"
                ],
                "summary": "List of all available email aliases",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AliasListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Adds a new email alias to the Docker Mailserver container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Aliases"
                ],
                "summary": "Add a new email alias",
                "parameters": [
                    {
                        "description": "Alias to add",
                        "name": "alias",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AliasResponse"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.AliasResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/emails": {
            "get": {
                "description": "Gets a list of all available email addresses from the Docker Mailserver container",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "E-Mails"
                ],
                "summary": "List of all available email addresses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.EmailListResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/status": {
            "get": {
                "description": "Checks if the Docker Mailserver Docker container is running",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Utility"
                ],
                "summary": "Checks Mailserver Docker container",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.StatusResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AliasListResponse": {
            "type": "object",
            "properties": {
                "aliases": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AliasResponse"
                    }
                }
            }
        },
        "models.AliasResponse": {
            "type": "object",
            "properties": {
                "alias": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                }
            }
        },
        "models.EmailListResponse": {
            "type": "object",
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.StatusResponse": {
            "type": "object",
            "properties": {
                "running": {
                    "type": "boolean"
                }
            }
        }
    }
}